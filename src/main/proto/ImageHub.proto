syntax = "proto3";
package com.eishanlawrence;

import "google/protobuf/timestamp.proto";

message User {
    string email = 1;
    AuthKey auth_code = 2;
    google.protobuf.Timestamp create_date = 3;
    Role role = 4;
}

// Possibility to add new roles in the future
enum Role {
    UNKNOWN_ROLE = 0;
    USER = 1;
}

// Protobuf to hold raw images
// This will be stored in Firestore
message RawImage {
    int32 width = 1;
    int32 height = 2;
    bytes image_data = 3;
    FileType file_type = 4;
    ImageUrl image_url = 5;
    enum FileType {
        UNKNOWN_FILE_TYPE = 0;
        PNG = 1;
        JPEG = 2;
    }
}

message ImageUrl {
    string url = 1;
}

// Generated by the server that authenticates the user
message AuthKey {
    string value = 1;
}

service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
}

// Request to create a user
message CreateUserRequest {
    string email = 1;
}

// Response to create user request
// Let's the client know if the creation was successful or not
message CreateUserResponse {
    bool success = 1;
    AuthKey apiKey = 2;
}

message DeleteUserRequest {
    string email = 1;
    AuthKey apiKey = 2;
}

message DeleteUserResponse {
    bool success = 1;
}

service ImageService {
    rpc UploadImage(UploadImageRequest) returns (UploadImageResponse) {}
    rpc GetImages(GetImagesRequest) returns (GetImagesResponse) {}
}

message UploadImageRequest {
    ImageUrl image = 1;
    AuthKey apiKey = 2;
}

message UploadImageResponse {
    bool success = 1;
}

message GetImagesRequest {
    string email = 1;
    AuthKey apiKey = 2;
}

message GetImagesResponse {
    repeated RawImage raw_image = 1;
}
